!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
GPIO_INPUT	dk_main.c	52;"	d	file:
GPIO_OUTPUT	dk_main.c	53;"	d	file:
GPIO_PIN17	dk_main.c	50;"	d	file:
GPIO_PIN4	dk_main.c	49;"	d	file:
GPIO_control	dk_main.c	/^void GPIO_control(const int GPIO_NUM, const int GPIO_IO, int *val)$/;"	f
GPIO_direction_init	dk_main.c	/^void GPIO_direction_init(const int GPIO_NUM, const int GPIO_IO)$/;"	f
IKP_QUEUE_SIZE	dk_queue.c	19;"	d	file:
KDIR	Makefile	/^KDIR = ..\/openwrt\/build_dir\/target-arm_cortex-a7+neon-vfpv4_musl-1.1.11_eabi\/linux-brcm2708_bcm2709\/linux-4.1.11$/;"	m
__this_module	dk_main.mod.c	/^__visible struct module __this_module$/;"	v	typeref:struct:module
__this_module	dk_table.mod.c	/^__visible struct module __this_module$/;"	v	typeref:struct:module
__used	dk_main.mod.c	/^__used$/;"	v	file:
__used	dk_table.mod.c	/^__used$/;"	v	file:
callback	dk_table.h	/^  int callback;$/;"	m	struct:ikp_node
cleanup_module	dk_main.c	/^void cleanup_module(void)$/;"	f
dk_workqueue	dk_main.c	/^static struct workqueue_struct *dk_workqueue;$/;"	v	typeref:struct:workqueue_struct	file:
ikp_node	dk_table.h	/^struct ikp_node {$/;"	s
ikp_node_add	dk_table.c	/^struct ikp_node *ikp_node_add(int sensor, int noti, int *f)$/;"	f
ikp_node_alloc	dk_table.c	/^struct ipk_node *ikp_node_alloc(int sensor, int noti, int *f)$/;"	f
ikp_queue	dk_queue.c	/^struct queue_node ikp_queue[IKP_QUEUE_SIZE];$/;"	v	typeref:struct:queue_node
ikp_queue_read	dk_queue.c	/^int ikp_queue_read(void)$/;"	f
ikp_queue_wirte	dk_queue.c	/^int ikp_queue_wirte(int sensor)$/;"	f
ikp_table	dk_table.c	/^struct ikp_table ikp_table;$/;"	v	typeref:struct:ikp_table
ikp_table	dk_table.h	/^struct ikp_table {$/;"	s
init_ikp_talbe	dk_table.c	/^int init_ikp_talbe(void)$/;"	f
init_module	dk_main.c	/^int init_module(void)$/;"	f
interrupt_function	dk_main.c	/^void interrupt_function(void)$/;"	f
interupt_work_func	dk_main.c	/^void interupt_work_func(struct work_struct *data)                                        $/;"	f
irq_num	dk_main.c	/^int irq_num = 0;$/;"	v
list	dk_table.h	/^  struct list_head list;$/;"	m	struct:ikp_table	typeref:struct:ikp_table::list_head
list_node	dk_table.h	/^  struct list_head list_node;$/;"	m	struct:ikp_node	typeref:struct:ikp_node::list_head
lookup_noti	dk_table.c	/^int lookup_noti(int noti)$/;"	f
noti	dk_table.h	/^  int noti;$/;"	m	struct:ikp_node
num	dk_table.h	/^  int num;$/;"	m	struct:ikp_node
obj-m	Makefile	/^obj-m := dk_main.o$/;"	m
queue_node	dk_queue.c	/^struct queue_node {$/;"	s	file:
read_index	dk_queue.c	/^int read_index;$/;"	v
sensor	dk_queue.c	/^  int sensor;$/;"	m	struct:queue_node	file:
sensor	dk_table.h	/^  int sensor;$/;"	m	struct:ikp_node
wirte_index	dk_queue.c	/^int wirte_index;$/;"	v
